on:
  pull_request:
  push:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always

defaults:
  runs-on: ubuntu-latest
  strategy:
    matrix:
      rust:
        - stable
        - nightly
      features:
        - name: default features
          value:
        - name: no default features
          value: --no-default-features --manifest-path binread/Cargo.toml
        - name: all features
          value: --all-features

jobs:
  clippy:
    name: Clippy with ${{ matrix.features.name }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: ${{ matrix.features.value }} -- -D warnings

  build:
    name: Build with ${{ matrix.features.name }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: ${{ matrix.features.value }}

  # Testing is separated just to more clearly differentiate in the CI whether a
  # build failed or a test failed
  test:
    name: Test with ${{ matrix.features.name }}
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: ${{ matrix.features.value }}

  coverage:
    if: ${{ secrets.CODECOV_TOKEN }}
    strategy:
      matrix: {}
    name: Code coverage
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/tarpaulin@v0.1
      - uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
